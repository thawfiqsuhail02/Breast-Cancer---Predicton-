# -*- coding: utf-8 -*-
"""bc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19PEotArXccqtS8KogSjAcHS2ThOtdV4a
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import files
uploaded=files.upload()
df=pd.read_csv("data.csv")
df.head(7)

df.shape

df.isna().sum()

df=df.dropna(axis=1)

df.shape

df["diagnosis"].value_counts()

sns.countplot(df["diagnosis"],label="count of patients")

df.iloc[:,1].values

from sklearn.preprocessing import LabelEncoder
lab=LabelEncoder()
lab.fit_transform(df.iloc[:,1].values)

df.iloc[:,1]=lab.fit_transform(df.iloc[:,1].values)

df

sns.pairplot(df.iloc[:,1:5],hue="diagnosis")

x=df.iloc[:,1:12].corr()

plt.figure(figsize=(10,8))
sns.heatmap(x,annot=True,fmt=".0%")

df

x=df.iloc[:,2:].values #x is independent and values stores the values in an array
y=df.iloc[:,1].values #y is dependent

type(x)
type(y)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.fit_transform(x_test)

from sklearn.linear_model import LogisticRegression
log=LogisticRegression(random_state=0)
log.fit(x_train,y_train)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,log.predict(x_test))

cm

pred=log.predict(x_test)
print(pred)
print()
print(y_test)

